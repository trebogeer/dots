#!/bin/bash

## MongoDB
## localhost:10000 => mongos
## localhost:10001 => config
## localhost:10010 => shard0(shard0000)
## localhost:10011 => shard1(shard0001)
## localhost:10012 => shard2(shard0002)


#MONGOHOME=~/tokumx-1.4.0-linux-x86_64
MONGOHOME=~/mongodb-linux-x86_64-2.4.4
TMP=~/data/db

OTHER_OPTS="--smallfiles --fork --rest"
#OTHER_OPTS="--fork --rest"
#OTHER_OPTS="--fork --rest --cacheSize=4G --expireOplogHours=1"

mkdir -p $TMP/log
mkdir -p $TMP/config
mkdir -p $TMP/shard0-rp
mkdir -p $TMP/shard0-rs
mkdir -p $TMP/shard0-ra
mkdir -p $TMP/shard1-rp
mkdir -p $TMP/shard1-rs
mkdir -p $TMP/shard1-ra

## shards
$MONGOHOME/bin/mongod --replSet rs0 --port 10010 --dbpath $TMP/shard0-rp --logpath $TMP/log/shard0-rp.log $OTHER_OPTS;
$MONGOHOME/bin/mongod --replSet rs0 --port 10011 --dbpath $TMP/shard0-rs --logpath $TMP/log/shard0-rs.log $OTHER_OPTS;
$MONGOHOME/bin/mongod --replSet rs0 --port 10012 --dbpath $TMP/shard0-ra --logpath $TMP/log/shard0-ra.log $OTHER_OPTS;
$MONGOHOME/bin/mongod --replSet rs1 --port 10020 --dbpath $TMP/shard1-rp --logpath $TMP/log/shard1-rp.log $OTHER_OPTS;
$MONGOHOME/bin/mongod --replSet rs1 --port 10021 --dbpath $TMP/shard1-rs --logpath $TMP/log/shard1-rs.log $OTHER_OPTS;
$MONGOHOME/bin/mongod --replSet rs1 --port 10022 --dbpath $TMP/shard1-ra --logpath $TMP/log/shard1-ra.log $OTHER_OPTS;

## config
$MONGOHOME/bin/mongod --configsvr --port 10001 --dbpath $TMP/config --logpath $TMP/log/config.log $OTHER_OPTS;
sleep 5;
## mongos
$MONGOHOME/bin/mongos --configdb localhost:10001 --port 10000 --logpath $TMP/log/mongos.log --chunkSize 1 --fork;
$MONGOHOME/bin/mongos --configdb localhost:10001 --port 30999 --logpath $TMP/log/mongos1.log --chunkSize 1 --fork;

ps axu |grep [m]ongo |grep -v [m]ongoshard
ps axu |grep [m]ongo |grep -v [m]ongoshard | wc -l

#replicas


echo "=== Initiating replica sets... ===="
$MONGOHOME/bin/mongo localhost:10010/admin --eval "printjson(db.runCommand({'replSetInitiate':
                    {'_id':'rs0', 'members':[
                        {'_id':1, 'host':'localhost:10010'},
                        {'_id':2, 'host':'localhost:10011'},
                        {'_id':3, 'host':'localhost:10012','arbiterOnly':true}
                        ]}}))";
$MONGOHOME/bin/mongo localhost:10020/admin --eval "printjson(db.runCommand({'replSetInitiate':
                    {'_id':'rs1', 'members':[
                        {'_id':1, 'host':'localhost:10020'},
                        {'_id':2, 'host':'localhost:10021'},
                        {'_id':3, 'host':'localhost:10022','arbiterOnly':true}
                        ]}}))";
echo "==== Replica sets initialized. Waiting for 30 seconds to let them come online. ===="
sleep 30;

## addShard
#mkdir -p $TMP/js




#echo "rsconf={}"
echo "Adding shards to cluster..."
$MONGOHOME/bin/mongo localhost:10000/admin --eval "printjson(db.runCommand({'addShard':'rs0/localhost:10010,localhost:10011,localhost:10012'}))"
$MONGOHOME/bin/mongo localhost:10000/admin --eval "printjson(db.runCommand({'addShard':'rs1/localhost:10020,localhost:10021,localhost:10022'}))"
#echo "sh.addShard('rs1/localhost:10020,localhost:10021,localhost:10022');" >> $TMP/js/addshard.js
##echo "db.runCommand( { addshard : 'localhost:10012' } );" >> $TMP/js/addshard.js

## insert„ÄÅIndex
##echo "for(var i=1; i<=100000; i++) db.logs.insert({'uid':i, 'value':Math.floor(Math.random()*100000+1)});" >> $TMP/js/insert.js
##echo "db.logs.ensureIndex( { 'uid' : 1 } );" >> $TMP/js/insert.js

## enablesharding
## echo "db.runCommand( { enablesharding : 'logdb' });" >> $TMP/js/enablesharding.js
## echo "db.runCommand( { shardcollection : 'logdb.logs' , key : { uid : 1 } } );" >> $TMP/js/enablesharding.js


## $MONGOHOME/bin/mongo localhost:10000/admin $TMP/js/enablesharding.js

echo ""
echo "==== Setting is done ===="
